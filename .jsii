{
  "author": {
    "email": "mail@moritzkornher.de",
    "name": "Momo Kornher",
    "roles": [
      "author"
    ]
  },
  "dependencies": {
    "projen": "^0.90.0"
  },
  "dependencyClosure": {
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    },
    "projen": {
      "submodules": {
        "projen.awscdk": {},
        "projen.build": {},
        "projen.cdk": {},
        "projen.cdk8s": {},
        "projen.cdktf": {},
        "projen.circleci": {},
        "projen.github": {},
        "projen.github.workflows": {},
        "projen.gitlab": {},
        "projen.java": {},
        "projen.javascript": {},
        "projen.python": {},
        "projen.release": {},
        "projen.typescript": {},
        "projen.vscode": {},
        "projen.web": {}
      },
      "targets": {
        "go": {
          "moduleName": "github.com/projen/projen-go"
        },
        "java": {
          "maven": {
            "artifactId": "projen",
            "groupId": "io.github.cdklabs"
          },
          "package": "io.github.cdklabs.projen"
        },
        "js": {
          "npm": "projen"
        },
        "python": {
          "distName": "projen",
          "module": "projen"
        }
      }
    }
  },
  "description": "A projen project that can be used directly from a git repository w/o publishing.",
  "docs": {
    "stability": "stable"
  },
  "homepage": "git@github.com:mrgrain/projen-jsii-git-project.git",
  "jsiiVersion": "5.5.23 (build 442cd00)",
  "license": "MIT",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "@mrgrain/projen-from-git",
  "readme": {
    "markdown": "# ProjenProjectFromGit\n\nA projen project that can be used directly from a git repository w/o publishing.\n\n## Usage\n\nCreate your custom projen from git project with this simple command:\n\n```console\nprojen new --from @mrgrain/projen-from-git@mrgrain/projen-from-git\n```\n\nIt is important to use the `<package-name>@<git-remote>` format, otherwise projen won't be able to correctly resolve the package.\nAll protocols supported by npm are supported for `<git-remote>`, however limitations apply if you change the package manager (see below).\n\nFor your production packages you likely want to append a `#<commit-ish>` at the end of `<git-remote>`.\nFor example `mrgrain/projen-from-git#v0.0.0` would install the very first release of this package.\n\n## Configuration\n\nAll `JsiiProject` options are available and can be used as command line flag when running `projen new`.\nFor a full list of the available flags, run `projen new jsii --help`.\n\n### projen dependency\n\nBy default, a `ProjenProjectFromGit` will take the latest version of projen as a dev dependency and any version as peer dependency.\nIn practice this works okay, since most projen projects auto-updated to the latest version of projen.\n\nHowever you might want to consider changing the peer dependency version constraint to the actual minimal required version.\n\n### Changed defaults\n\n| Option                                      | New default |\n| ------------------------------------------- | ----------- |\n| `packageManager`                            | `\"npm\"`     |\n| `peerDependencyOptions.pinnedDevDependency` | `false`     |\n| `projenrcTs`                                | `true`      |\n| `releaseToNpm`                              | `false`     |\n\n## Limitations\n\n### Support for JavaScript & TypeScript only\n\nUsing a git repository requires all compiled files to be checked into version control.\nCurrently it is not easily possible to check-in the jsii output files for any other languages.\n\n### Supported `<git-remote>` formats\n\nPlease refer to the documentation of your package manager for supported formats.\nWhen using `yarn` or `pnpm` the safest way is to use one of these two formats:\n\n```console\ngit+ssh://github.com/mrgrain/projen-from-git.git\ngit+https://github.com/mrgrain/projen-from-git.git\n```\n\n### Authentication\n\nAuthentication is handled by package managers.\nPlease do not open an issue if authentication does not work.\nThe easiest way is to have a public repository and use an Open Source license.\n"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:mrgrain/projen-jsii-git-project.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "js": {
      "npm": "@mrgrain/projen-from-git"
    }
  },
  "types": {
    "@mrgrain/projen-from-git.ProjenProjectFromGit": {
      "assembly": "@mrgrain/projen-from-git",
      "base": "projen.cdk.JsiiProject",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@mrgrain/projen-from-git.ProjenProjectFromGit",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/index.ts",
          "line": 4
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "projen.cdk.JsiiProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 3
      },
      "name": "ProjenProjectFromGit",
      "symbolId": "src/index:ProjenProjectFromGit"
    }
  },
  "version": "0.0.0",
  "fingerprint": "MbY2t0jscNH2WyF4r32R131iIXo/Z6ePLHSmOGNQyZw="
}